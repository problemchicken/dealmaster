name: iOS Simulator ‚Äî Post-merge rebuild

on:
  push:
    branches: [ main ]

jobs:
  build-simulator:
    runs-on: macos-14
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install JS dependencies
        run: npm ci

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods --no-document
          cd ios && pod install --repo-update && cd ..

      - name: Clean DerivedData
        run: rm -rf ~/Library/Developer/Xcode/DerivedData ./build

      - name: Build iOS Simulator
        run: |
          set -e
          echo "üîç Detecting workspace/scheme..."
          ls -1 *.xcworkspace || echo "No .xcworkspace found"
          ls -1 ios/*.xcworkspace || echo "No iOS .xcworkspace found"
          WS=$(find . -name "*.xcworkspace" | head -n1 || echo "")
          PROJ=$(find . -name "*.xcodeproj" | head -n1 || echo "")
          SCHEME=${SCHEME:-Dealmaster}
          DEST="platform=iOS Simulator,name=iPhone 17 Pro,OS=latest"
          echo "üõ†Ô∏è Using workspace: $WS"
          echo "üõ†Ô∏è Using project: $PROJ"
          echo "üõ†Ô∏è Using scheme: $SCHEME"
          if [ -n "$WS" ]; then
            xcodebuild -workspace "$WS" -scheme "$SCHEME" -sdk iphonesimulator \
              -destination "$DEST" clean build \
              -derivedDataPath ./build/DerivedData | xcpretty
          else
            xcodebuild -project "$PROJ" -scheme "$SCHEME" -sdk iphonesimulator \
              -destination "$DEST" clean build \
              -derivedDataPath ./build/DerivedData | xcpretty
          fi

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-simulator-build-logs
          path: |
            build/DerivedData/Logs/Build
